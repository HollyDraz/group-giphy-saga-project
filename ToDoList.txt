## To Do:

Front end:
 - [x] will create the content for the Search.jsx component
 - [x] this includes the axios GET request for GIPHY api search results
 - [x] map results onto DOM, each result has a 'favorite' button 
    and the category dropdown menu
    categories:
    ('funny'),
     ('cohort'), 
     ('cartoon'), 
     ('nsfw'), 
     ('meme');
 - [] clicking a category in the dropdown menu sets the categoryID in state

 - [] clicking favorite button gets the category id and the url of the selected gif as data for the POST request to the Favorite table via the router
 - [x] when a gif is successfully 'favorited', alert for the user to let them know it worked

 - [x] clicking favorite button gets the category id and the url of the selected gif as data for the POST request to the Favorite table via the router

 - [x] include 'Favorites' button to bring the user to Favorites.jsx

Brianna:
- [x] set up "favorites" table
- [x] POST request to "favorites" table with gif url and categoryID

Bryn:
- [] create search.router.js file within routes folder
- [] connect search.router.js to server.js so the requests get directed properly
- [] create router.get within search.router.js to query the GIPHY API based on the user input string
- [] router.get('/:string')

** URL for search GET request `/search/${string}`

[x] create env filed 
[x] create ignore file 

Front End:
[x]Create a folder and files for search view and favorites view 
[]Create routes for views in app.js 



index.js:
[]add any imports needed
[x]create store
    []add redux logger to store 
[]complete all necessary redux imports 
[]create reducers and action types
    []
    []
[] add saga middleware to index.js 
[]create sagas and action types
    []
    []
[]create saga watcher 





Routes:
[]complete favorites route:
    [x]get
    []post 
    []put 



Backend:
[x] create database 
[x] create favorites table 
[] create relationships between favorites and category 
[] * a junction table between the 2
[] test and finalize database query text for get, post, put requests 
  